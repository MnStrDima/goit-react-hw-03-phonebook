{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","App.module.css"],"names":["module","exports","uuidv4","validationSchema","yup","name","required","number","length","ContactForm","state","initialValues","onSubmit","resetForm","setSubmitting","props","id","className","styles","contactForm","nameLabel","type","contactFormInput","errorMessage","numberLabel","submitButton","Component","Filter","initialValue","onFilterChange","inputWrapper","filterLabel","filterInput","value","onChange","e","target","defaultProps","ContactList","contacts","onDeleteButtonClick","contactsList","map","contact","idx","even","odd","deleteButton","onClick","App","filter","handleSubmit","contactObj","some","alert","setState","prevState","handleFilterChange","handleDeleteContact","getFilteredContactsList","toLowerCase","includes","localStorage","getItem","parsedContacts","JSON","parse","this","prevProps","setItem","stringify","filteredContactsList","title","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6ff4d877.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__OrlO3\",\"nameLabel\":\"ContactForm_nameLabel__1MRlw\",\"numberLabel\":\"ContactForm_numberLabel__2K0Y9 ContactForm_nameLabel__1MRlw\",\"contactFormInput\":\"ContactForm_contactFormInput__2O3H_\",\"errorMessage\":\"ContactForm_errorMessage__1gA3R\",\"submitButton\":\"ContactForm_submitButton__1j4U7\"};","import { Component } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types';\nimport styles from './ContactForm.module.css';\n\nuuidv4();\n\nconst validationSchema = yup.object({\n  name: yup.string().required(\"Enter contact's name\"),\n  number: yup\n    .string()\n    .length(10, 'Example: 0930939393')\n    .required(\"Enter contact's phone\"),\n});\n\nexport default class ContactForm extends Component {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  state = { name: '', number: '' };\n\n  render() {\n    return (\n      <Formik\n        initialValues={{ name: '', number: '' }}\n        validationSchema={validationSchema}\n        onSubmit={({ name, number }, { resetForm, setSubmitting }) => {\n          this.props.onSubmit({ name, number, id: uuidv4() });\n          setSubmitting(false);\n          resetForm();\n        }}\n      >\n        <Form className={styles.contactForm}>\n          <label className={styles.nameLabel}>\n            Name:\n            <Field\n              type=\"text\"\n              name=\"name\"\n              className={styles.contactFormInput}\n            />\n            <span className={styles.errorMessage}>\n              <ErrorMessage name=\"name\" />\n            </span>\n          </label>\n\n          <label className={styles.numberLabel}>\n            Number:\n            <Field\n              type=\"tel\"\n              name=\"number\"\n              className={styles.contactFormInput}\n            />\n            <span className={styles.errorMessage}>\n              <ErrorMessage name=\"number\" />\n            </span>\n          </label>\n          <button type=\"submit\" className={styles.submitButton}>\n            Add contact\n          </button>\n        </Form>\n      </Formik>\n    );\n  }\n}\n","import PropTypes from 'prop-types';\nimport styles from './Filter.module.css';\n\nexport default function Filter({ initialValue, onFilterChange }) {\n  return (\n    <div className={styles.inputWrapper}>\n      <label className={styles.filterLabel}>\n        Find contacts by name:\n        <input\n          className={styles.filterInput}\n          type=\"text\"\n          name=\"name\"\n          value={initialValue}\n          onChange={e => {\n            onFilterChange(e.target.value);\n          }}\n        />\n      </label>\n    </div>\n  );\n}\n\nFilter.defaultProps = {\n  initialValue: '',\n};\nFilter.propTypes = PropTypes.shape({\n  initialValue: PropTypes.string,\n  onFilterChange: PropTypes.func.isRequired,\n}).isRequired;\n","import PropTypes from 'prop-types';\nimport styles from './ContactList.module.css';\n\nexport default function ContactList({ contacts, onDeleteButtonClick }) {\n  return (\n    <ul className={styles.contactsList}>\n      {contacts.map((contact, idx) => (\n        <li\n          key={contact.id}\n          className={idx % 2 === 0 ? styles.even : styles.odd}\n        >\n          <span>\n            {contact.name}: {contact.number}\n          </span>\n          <button\n            type=\"button\"\n            id={contact.id}\n            className={styles.deleteButton}\n            onClick={e => onDeleteButtonClick(e.target.id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = PropTypes.shape({\n  contacts: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onDeleteButtonClick: PropTypes.func.isRequired,\n}).isRequired;\n","import { Component } from 'react';\n\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Filter from './components/Filter/Filter';\nimport ContactList from './components/ContactList/ContactList';\nimport styles from './App.module.css';\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  handleSubmit = contactObj => {\n    if (this.state.contacts.some(({ name }) => name === contactObj.name)) {\n      return alert(`${contactObj.name} already exists in your phonebook`);\n    }\n    this.setState(prevState => {\n      return {\n        contacts: [...prevState.contacts, contactObj],\n      };\n    });\n  };\n\n  handleFilterChange = filter => {\n    this.setState({\n      filter,\n    });\n  };\n\n  handleDeleteContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  getFilteredContactsList = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    const filteredContactsList = this.getFilteredContactsList();\n    return (\n      <div>\n        <h1 className={styles.title}>Phonebook</h1>\n        <ContactForm onSubmit={this.handleSubmit} />\n\n        <h2 className={styles.title}>Contacts:</h2>\n        {contacts.length > 1 && (\n          <Filter\n            initialValue={filter}\n            onFilterChange={this.handleFilterChange}\n          />\n        )}\n        {filteredContactsList.length > 0 && (\n          <ContactList\n            contacts={filteredContactsList}\n            onDeleteButtonClick={this.handleDeleteContact}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"ContactList_contactsList__14Z-h\",\"listItem\":\"ContactList_listItem__29Cbr\",\"even\":\"ContactList_even__1ET8R ContactList_listItem__29Cbr\",\"odd\":\"ContactList_odd__29kY_ ContactList_listItem__29Cbr\",\"deleteButton\":\"ContactList_deleteButton__5-_H0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputWrapper\":\"Filter_inputWrapper__1gV1Q\",\"filterLabel\":\"Filter_filterLabel__1TeQb\",\"filterInput\":\"Filter_filterInput__u16Kg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__-GfWs\"};"],"sourceRoot":""}